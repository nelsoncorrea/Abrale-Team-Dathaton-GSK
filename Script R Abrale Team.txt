# pacotes utilizados #

library(dplyr)
library(lubrifate)
library(read.dbc)


#########################################################################

# carregando os arquivos .dbc extraídos pelo Tabwin #

sia<-read.dbc("Asma SIA.dbc")
sih<-read.dbc("Asma SIH.dbc")
sim<-read.dbc("Asma SIM.dbc")


#########################################################################

# Banco de dados do SIASUS #

# caracteríticas do banco de dados #

str(sia)

##

'data.frame':   3407846 obs. of  50 variables:

 $ AP_MVM    : Factor w/ 48 levels "201501","201502",..: 13 13 13 13 13 13 13 13 13 13 ...
 $ AP_CONDIC : Factor w/ 2 levels "EP","PG": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_GESTAO : Factor w/ 27 levels "110000","120000",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ AP_CODUNI : Factor w/ 186 levels "0003441","0003816",..: 108 108 108 108 108 108 108 108 108 108 ...
 $ AP_AUTORIZ: Factor w/ 2906836 levels "1114200226491",..: 13745 13792 13772 13830 13665 13601 13632 13728 13630 13647 ...
 $ AP_CMP    : Factor w/ 51 levels "201410","201411",..: 16 16 16 16 16 16 16 16 16 16 ...
 $ AP_PRIPAL : Factor w/ 12 levels "0604040016","0604040024",..: 4 4 4 4 4 4 4 4 4 4 ...
 $ AP_VL_AP  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ AP_UFMUN  : Factor w/ 169 levels "110020","120020",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ AP_TPUPS  : Factor w/ 9 levels "02","04","05",..: 6 6 6 6 6 6 6 6 6 6 ...
 $ AP_TIPPRE : Factor w/ 3 levels "00","40","50": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_MN_IND : Factor w/ 2 levels "I","M": 2 2 2 2 2 2 2 2 2 2 ...
 $ AP_CNPJCPF: Factor w/ 85 levels "00394700000108",..: 9 9 9 9 9 9 9 9 9 9 ...
 $ AP_CNPJMNT: Factor w/ 33 levels "0000000000000",..: 10 10 10 10 10 10 10 10 10 10 ...
 $ AP_CNSPCN : Factor w/ 374758 levels "|{\177\177{\177|~‚\177}{{{\177",..: 214790 214814 294039 5672 358187 325818 214811 294232 369976 1299 ...
 $ AP_COIDADE: Factor w/ 4 levels "2","3","4","5": 3 3 3 3 3 3 3 3 3 3 ...
 $ AP_NUIDADE: Factor w/ 100 levels "00","01","02",..: 58 73 57 63 70 60 53 66 64 75 ...
 $ AP_SEXO   : Factor w/ 2 levels "F","M": 1 1 1 2 2 2 1 1 1 1 ...
 $ AP_RACACOR: Factor w/ 6 levels "01","02","03",..: 6 6 6 6 6 3 3 6 1 3 ...
 $ AP_MUNPCN : Factor w/ 4807 levels "110001","110002",..: 63 63 63 68 63 63 63 63 63 63 ...
 $ AP_UFNACIO: Factor w/ 102 levels "01","010","021",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ AP_CEPPCN : Factor w/ 130334 levels "01001000","01003001",..: 97782 97672 97770 97865 97570 97792 97781 97570 97566 97751 ...
 $ AP_UFDIF  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_MNDIF  : Factor w/ 1 level "1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_DTINIC : Factor w/ 1543 levels "20140802","20140902",..: 456 468 463 480 427 410 425 446 425 425 ...
 $ AP_DTFIM  : Factor w/ 360 levels "20141031","20141130",..: 132 132 132 132 123 118 123 123 123 123 ...
 $ AP_TPATEN : Factor w/ 1 level "06": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_TPAPAC : Factor w/ 2 levels "1","2": 1 1 1 1 2 2 2 2 2 2 ...
 $ AP_MOTSAI : Factor w/ 16 levels "11","15","16",..: 5 5 5 5 5 5 5 5 5 5 ...
 $ AP_OBITO  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_ENCERR : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_PERMAN : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ AP_ALTA   : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_TRANSF : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_DTOCOR : Factor w/ 1121 levels "20141001","20141101",..: NA NA NA NA NA NA NA NA NA NA ...
 $ AP_CODEMI : Factor w/ 105 levels "E110000001","E120000001",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ AP_CATEND : Factor w/ 5 levels "01","02","03",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_APACANT: Factor w/ 22650 levels "000         0",..: NA NA NA NA NA NA NA NA NA NA ...
 $ AP_UNISOL : Factor w/ 5121 levels "0","00","000",..: 213 3723 213 213 213 213 3777 213 213 3723 ...
 $ AP_DTSOLIC: Factor w/ 3740 levels "00000000","12010401",..: 2621 2662 2640 2674 2618 2600 2611 2640 2611 2612 ...
 $ AP_DTAUT  : Factor w/ 1646 levels "00000000","02010602",..: 505 531 526 543 490 473 481 509 481 488 ...
 $ AP_CIDCAS : Factor w/ 1 level "0000": 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_CIDPRI : Factor w/ 3 levels "J450","J451",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_CIDSEC : Factor w/ 36 levels "0000","C501",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ AP_ETNIA  : Factor w/ 30 levels "0","0001","0005",..: NA NA NA NA NA NA NA NA NA NA ...
 $ AM_PESO   : Factor w/ 1022 levels "\t5","0","00",..: 71 91 61 87 67 87 87 61 62 78 ...
 $ AM_ALTURA : Factor w/ 328 levels "0","00","000",..: 161 169 145 172 172 165 143 147 139 149 ...
 $ AM_TRANSPL: Factor w/ 2 levels "N","S": 1 1 1 1 1 1 1 1 1 1 ...
 $ AM_QTDTRAN: Factor w/ 3 levels "00","01","02": 1 1 1 1 1 1 1 1 1 1 ...
 $ AM_GESTANT: Factor w/ 2 levels "N","S": 1 1 1 1 1 1 1 1 1 1 ... 


#########################################################################

##

# Variáveis extraídas do Banco SIASUS 

AP_CMP:  Data de Atendimento ao Paciente / Competência (AAAAMM)

AP_PRIPAL: Procedimento Principal da APAC

AP_CNSPCN: CNS do Paciente

AP_MUNPCN: UF + Município de Residência do paciente #


cmp<-as.numeric(as.character(sia$AP_CMP))


dtaten<-ymd(cmp*100+1)

anoaten<-year(dtaten)


## os dois últimos passos foram realizados para transformar o formato de data de AAAAMM para AAAAMMMDD e extrair o ano de atendimento ##


proced<-as.numeric(as.character(sia$AP_PRIPAL))

pcn<-as.factor(as.character(sia$AP_CNSPCN))

munpcn<-as.factor(as.character(sia$AP_MUNPCN))


## Formando novo banco de dados ##

sia2<-data.frame(anoaten,proced,pcn,munpcn)

#########################################################################

## 

selecionar apenas os registros dos códigos de dispensação do b2 agonista e glicocorticóide

	06.04.04.004-0 - FORMOTEROL 12 MCG + BUDESONIDA 400 MCG  (POR CAPSULA INALANTE)	
	06.04.04.005-9 - FORMOTEROL 12 MCG + BUDESONIDA 400 MCG PO INALANTE (POR FRASCO DE 60 DOSES)	
	06.04.04.006-7 - FORMOTEROL 6 MCG + BUDESONIDA 200 MCG PO INALANTE (POR FRASCO DE 60 DOSES)	
	06.04.04.007-5 - FORMOTEROL 6MCG + BUDESONIDA 200 MCG (POR CAPSULA INALANTE)

##

sia2<-sia2[sia2$proced>=604040040&sia2$proced<=604040075,]

# caracteríticas do banco de dados #

str(sia2)

##

'data.frame':   3291162 obs. of  4 variables:
 $ anoaten: num  2016 2016 2016 2016 2016 ...
 $ proced : num  6.04e+08 6.04e+08 6.04e+08 6.04e+08 6.04e+08 ...
 $ pcn    : Factor w/ 280425 levels "|{\177\177{{\177|ƒƒƒ{{{\200",..: 157883 157904 218805 4442 267274 243106 157902 218952 276639 986 ...
 $ munpcn : Factor w/ 4487 levels "110001","110002",..: 62 62 62 67 62 62 62 62 62 62 ...

##


#########################################################################


# como identificar o número de LMEs por município e por ano #

## realizar contagem das LMEs por ano ##

lme2016<-sia2%>%filter(anoaten==2016)%>%group_by(munpcn)%>%summarise(n_lme=length(pcn))

lme2016<-data.frame(lme2016)

ano<-rep(2016,(length(lme2016$munpcn))) # variável criada para indicar o ano no banco de dados #

lme2016<-data.frame(lme2016,ano)

lme2017<-sia2%>%filter(anoaten==2017)%>%group_by(munpcn)%>%summarise(n_lme=length(pcn))

lme2017<-data.frame(lme2017)

ano<-rep(2017,(length(lme2017$munpcn))) # variável criada para indicar o ano no banco de dados #

lme2017<-data.frame(lme2017,ano)

#########################################################################


# como identicar o número de pacientes por município e por ano #

## selecionar apenas o primeiro registro do paciente removento as duplicatas das LMEs ##

siapcn<-sia2[!duplicated(sia2$pcn),]

## realizar contagem dos pacientes por municipio e por ano ##

pcn2016<-siapcn%>%filter(anoaten==2016)%>%group_by(munpcn)%>%summarise(n_pcn=length(pcn))

pcn2016<-data.frame(pcn2016) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2016" que possui esta variável" #

pcn2017<-siapcn%>%filter(anoaten==2017)%>%group_by(munpcn)%>%summarise(n_pcn=length(pcn))

pcn2017<-data.frame(pcn2017) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2016" que possui esta variável" #

#########################################################################

# Banco de dados do SIHSUS #

# caracteríticas do banco de dados #

str(sih)

##

'data.frame':   170298 obs. of  113 variables:
 $ UF_ZI     : Factor w/ 1778 levels "110000","110001",..: 38 38 38 38 38 38 38 38 38 38 ...
 $ ANO_CMPT  : Factor w/ 4 levels "2015","2016",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ MES_CMPT  : Factor w/ 12 levels "01","02","03",..: 1 1 1 1 1 2 2 2 2 2 ...
 $ ESPEC     : Factor w/ 7 levels "01","02","03",..: 5 3 5 5 3 3 5 5 5 5 ...
 $ CGC_HOSP  : Factor w/ 2391 levels "00038174000658",..: 275 261 275 265 275 262 269 269 272 275 ...
 $ N_AIH     : Factor w/ 351471 levels "1114100470660",..: 3264 3268 3266 3262 3263 3273 3275 3274 3272 3267 ...
 $ IDENT     : Factor w/ 2 levels "1","5": 1 1 1 1 1 1 1 1 1 1 ...
 $ CEP       : Factor w/ 73574 levels "01001000","01001001",..: 55596 55578 55596 55591 55596 55590 55597 55602 55600 55596 ...
 $ MUNIC_RES : Factor w/ 5187 levels "110001","110002",..: 70 65 70 69 70 54 57 60 62 70 ...
 $ NASC      : Factor w/ 34161 levels "18991230","19000101",..: 32885 24256 31576 31416 15774 20280 30097 32165 32516 32110 ...
 $ SEXO      : Factor w/ 2 levels "1","3": 1 2 1 2 2 2 2 1 1 1 ...
 $ UTI_MES_IN: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_MES_AN: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_MES_AL: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_MES_TO: int  0 0 0 0 0 0 0 0 0 0 ...
 $ MARCA_UTI : Factor w/ 11 levels "00","01","74",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ UTI_INT_IN: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_INT_AN: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_INT_AL: int  0 0 0 0 0 0 0 0 0 0 ...
 $ UTI_INT_TO: int  0 0 0 0 0 0 0 0 0 0 ...
 $ DIAR_ACOM : int  2 0 2 4 0 0 3 2 1 1 ...
 $ QT_DIARIAS: int  2 3 2 5 2 1 3 2 1 1 ...
 $ PROC_SOLIC: Factor w/ 239 levels "0201010267","0201010402",..: 105 105 105 105 105 10 105 105 105 105 ...
 $ PROC_REA  : Factor w/ 118 levels "0201010550","0209040033",..: 63 63 63 63 63 6 63 63 63 63 ...
 $ VAL_SH    : num  469 453 469 485 453 ...
 $ VAL_SP    : num  25.7 25.7 25.7 25.7 25.7 ...
 $ VAL_SADT  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_RN    : num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_ACOMP : num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_ORTP  : num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_SANGUE: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_SADTSR: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_TRANSP: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_OBSANG: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_PED1AC: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_TOT   : num  495 479 495 511 479 ...
 $ VAL_UTI   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ US_TOT    : num  125 121 125 129 121 ...
 $ DT_INTER  : Factor w/ 1563 levels "20140730","20140817",..: 475 472 469 478 484 522 524 481 471 517 ...
 $ DT_SAIDA  : Factor w/ 1559 levels "20140801","20140819",..: 473 471 467 478 482 519 523 479 468 514 ...
 $ DIAG_PRINC: Factor w/ 4 levels "J450","J451",..: 4 4 4 4 4 4 4 4 1 4 ...
 $ DIAG_SECUN: Factor w/ 1 level "0000": 1 1 1 1 1 1 1 1 1 1 ...
 $ COBRANCA  : Factor w/ 21 levels "11","12","14",..: 2 2 2 15 2 2 2 2 2 2 ...
 $ NATUREZA  : Factor w/ 9 levels "00","20","22",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ NAT_JUR   : Factor w/ 28 levels "1015","1023",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ GESTAO    : Factor w/ 2 levels "1","2": 2 2 2 2 2 2 2 2 2 2 ...
 $ RUBRICA   : int  0 0 0 0 0 0 0 0 0 0 ...
 $ IND_VDRL  : Factor w/ 2 levels "0","1": 1 1 1 1 1 1 1 1 1 1 ...
 $ MUNIC_MOV : Factor w/ 2982 levels "110001","110002",..: 55 42 55 54 55 41 45 45 47 55 ...
 $ COD_IDADE : Factor w/ 4 levels "2","3","4","5": 2 3 3 3 3 3 3 3 3 3 ...
 $ IDADE     : int  8 24 4 4 48 35 8 2 1 2 ...
 $ DIAS_PERM : int  2 3 2 4 2 1 3 2 1 1 ...
 $ MORTE     : int  0 0 0 0 0 0 0 0 0 0 ...
 $ NACIONAL  : Factor w/ 61 levels "010","020","021",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ NUM_PROC  : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ CAR_INT   : Factor w/ 2 levels "01","02": 1 2 1 2 1 1 1 1 1 1 ...
 $ TOT_PT_SP : int  0 0 0 0 0 0 0 0 0 0 ...
 $ CPF_AUT   : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ HOMONIMO  : Factor w/ 3 levels "0","1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ NUM_FILHOS: int  0 0 0 0 0 0 0 0 0 0 ...
 $ INSTRU    : Factor w/ 1 level "0": 1 1 1 1 1 1 1 1 1 1 ...
 $ CID_NOTIF : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ CONTRACEP1: Factor w/ 1 level "00": 1 1 1 1 1 1 1 1 1 1 ...
 $ CONTRACEP2: Factor w/ 1 level "00": 1 1 1 1 1 1 1 1 1 1 ...
 $ GESTRISCO : Factor w/ 1 level "1": 1 1 1 1 1 1 1 1 1 1 ...
 $ INSC_PN   : Factor w/ 22 levels "000000000000",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ SEQ_AIH5  : Factor w/ 1 level "000": 1 1 1 1 1 1 1 1 1 1 ...
 $ CBOR      : Factor w/ 4 levels "000000","225124",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ CNAER     : Factor w/ 3 levels "000","663","851": 1 1 1 1 1 1 1 1 1 1 ...
 $ VINCPREV  : Factor w/ 3 levels "0","1","4": 1 1 1 1 1 1 1 1 1 1 ...
 $ GESTOR_COD: Factor w/ 17 levels "00000","00007",..: 1 10 1 1 1 1 1 1 1 1 ...
 $ GESTOR_TP : Factor w/ 2 levels "0","1": 1 2 1 1 1 1 1 1 1 1 ...
 $ GESTOR_CPF: Factor w/ 1415 levels "000000000000000",..: 1 652 1 1 1 1 1 1 1 1 ...
 $ GESTOR_DT : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ CNES      : Factor w/ 3872 levels "0000035","0000396",..: 109 122 109 118 109 121 108 108 125 109 ...
 $ CNPJ_MANT : Factor w/ 2045 levels "00005959000110",..: 329 329 329 329 329 329 329 329 329 329 ...
 $ INFEHOSP  : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ CID_ASSO  : Factor w/ 1 level "0000": 1 1 1 1 1 1 1 1 1 1 ...
 $ CID_MORTE : Factor w/ 1 level "0000": 1 1 1 1 1 1 1 1 1 1 ...
 $ COMPLEX   : Factor w/ 2 levels "02","03": 1 1 1 1 1 1 1 1 1 1 ...
 $ FINANC    : Factor w/ 2 levels "04","06": 2 2 2 2 2 2 2 2 2 2 ...
 $ FAEC_TP   : Factor w/ 2 levels "040032","040066": NA NA NA NA NA NA NA NA NA NA ...
 $ REGCT     : Factor w/ 7 levels "0000","7102",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ RACA_COR  : Factor w/ 6 levels "01","02","03",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ ETNIA     : Factor w/ 87 levels "0000","0001",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ SEQUENCIA : int  3121 2200 3129 3360 3076 4555 7110 7108 1560 7036 ...
 $ REMESSA   : Factor w/ 31239 levels "HE11000001N201501.DTS",..: 60 60 60 60 60 61 61 61 61 61 ...
 $ AUD_JUST  : Factor w/ 542 levels ".","..","...",..: NA 397 NA NA NA NA NA NA NA NA ...
 $ SIS_JUST  : Factor w/ 772 levels "134","700503364752656",..: NA 591 NA NA NA NA NA NA NA NA ...
 $ VAL_SH_FED: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_SP_FED: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_SH_GES: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_SP_GES: num  0 0 0 0 0 0 0 0 0 0 ...
 $ VAL_UCI   : num  0 0 0 0 0 0 0 0 0 0 ...
 $ MARCA_UCI : Factor w/ 4 levels "00","01","02",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ DIAGSEC1  : Factor w/ 931 levels "A048","A049",..: NA NA NA NA NA NA NA NA NA NA ...
 $ DIAGSEC2  : Factor w/ 428 levels "A085","A09","A379",..: NA NA NA NA NA NA NA NA NA NA ...
 $ DIAGSEC3  : Factor w/ 193 levels "A09","A419","A491",..: NA NA NA NA NA NA NA NA NA NA ...
 $ DIAGSEC4  : Factor w/ 88 levels "A09","A419","B852",..: NA NA NA NA NA NA NA NA NA NA ...
  [list output truncated]

##

#########################################################################

##

# Variáveis extraídas do Banco SIHSUS 


N_AIH: Número da AIH.

MUNIC_RES: Município de Residência do Paciente

VAL_UTI: Valor de UTI.

DI_INTER: Data de internação no formato aaammdd.

#

aih<-as.factor(as.character(sih$N_AIH))
munint<-as.factor(as.character(sih$MUNIC_RES))
uti<-as.factor(as.character(sih$VAL_UTI))
dtinter<-ymd(sih$DT_INTER)
anointer<-year(dtinter)


## Formando novo banco de dados ##

sih2<-data.frame(anointer,aih,munint,uti)



#########################################################################

# como identificar numero de internações por municipio e ano #

int2016<- sih2%>%filter(anointer==2016)%>%group_by(munint)%>%summarise(n_int=length(aih))
int2016<-data.frame(int2016) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2016" que possui esta variável" #

int2017<- sih2%>%filter(anointer==2017)%>%group_by(munint)%>%summarise(n_int=length(aih))
int2017<-data.frame(int2017) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2017" que possui esta variável" #

#########################################################################

# como identificar numero de internações na uti por municipio e ano #

buti<-sih2[sih2$uti!="0",] # seleciona apenas as AIHs que tiveram algum custo com uti, ou seja, de pacientes que foram internados na uti #

# contagem do número de internações na uti por município #

uti2016<-buti%>%filter(anointer==2016)%>%group_by(munint)%>%summarise(n_uti=length(aih))

uti2016<-data.frame(uti2016) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2016" que possui esta variável" #


uti2017<-buti%>%filter(anointer==2017)%>%group_by(munint)%>%summarise(n_uti=length(aih))

uti2017<-data.frame(uti2017) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2017" que possui esta variável" #


#########################################################################


# Banco de dados do SIMSUS #

# caracteríticas do banco de dados #

str(sim)

##

data.frame':   3634 obs. of  92 variables:
 $ NUMERODO  : Factor w/ 5746 levels "04254350","05672500",..: 134 173 31 523 546 811 812 252 1921 1920 ...
 $ CODINST   : Factor w/ 1272 levels "EBA2927400001",..: 15 12 10 12 14 13 11 36 28 28 ...
 $ NUMERODV  : Factor w/ 10 levels "0","1","2","3",..: 10 9 7 5 9 4 1 9 3 1 ...
 $ ORIGEM    : Factor w/ 3 levels "1","2","3": 1 1 1 1 1 1 1 1 1 1 ...
 $ TIPOBITO  : Factor w/ 1 level "2": 1 1 1 1 1 1 1 1 1 1 ...
 $ DTOBITO   : Factor w/ 730 levels "01012016","01012017",..: 183 640 96 730 2 417 552 682 718 222 ...
 $ HORAOBITO : Factor w/ 833 levels "0000","0001",..: 412 701 104 89 28 211 453 185 530 502 ...
 $ NUMSUS    : Factor w/ 1144 levels "000000000000000",..: NA NA 1052 NA NA NA 1047 NA NA NA ...
 $ NATURAL   : Factor w/ 44 levels "008","016","025",..: 18 19 NA 18 18 28 19 NA 30 28 ...
 $ CODMUNNATU: Factor w/ 2073 levels "110010","110015",..: 8 9 NA 6 7 428 14 NA 641 457 ...
 $ DTNASC    : Factor w/ 5078 levels "01011913","01011914",..: 2196 5075 2051 1857 3838 4436 3707 3067 1270 19 ...
 $ IDADE     : Factor w/ 120 levels "200","221","226",..: 97 67 95 70 11 92 49 77 100 62 ...
 $ SEXO      : Factor w/ 2 levels "1","2": 2 2 2 2 1 1 2 1 1 1 ...
 $ RACACOR   : Factor w/ 5 levels "1","2","3","4",..: 1 4 1 4 5 4 4 NA 1 NA ...
 $ ESTCIV    : Factor w/ 6 levels "1","2","3","4",..: 3 5 3 NA NA 3 1 NA 5 NA ...
 $ ESC       : Factor w/ 7 levels "0","1","2","3",..: 4 6 NA 7 NA 4 2 2 3 1 ...
 $ ESC2010   : Factor w/ 7 levels "0","1","2","3",..: 2 6 NA 7 NA 2 1 1 2 NA ...
 $ SERIESCFAL: Factor w/ 8 levels "1","2","3","4",..: 4 NA NA NA NA 4 NA NA NA NA ...
 $ OCUP      : Factor w/ 269 levels "010210","021205",..: 268 110 NA 268 NA 152 NA 154 NA NA ...
 $ CODMUNRES : Factor w/ 1894 levels "110006","110012",..: 17 13 11 14 16 15 12 585 591 591 ...
 $ LOCOCOR   : Factor w/ 7 levels "1","2","3","4",..: 3 1 3 1 1 3 1 1 1 1 ...
 $ CODESTAB  : Factor w/ 2091 levels "0000019","0000029",..: NA 1856 NA 119 118 NA 1762 1990 124 127 ...
 $ ESTABDESCR: Factor w/ 2 levels "HOSPITAL FAMILY",..: NA NA NA NA NA NA NA NA NA NA ...
 $ CODMUNOCOR: Factor w/ 1644 levels "110002","110015",..: 12 9 7 9 11 10 8 524 515 515 ...
 $ IDADEMAE  : Factor w/ 18 levels "15","16","17",..: NA NA NA NA 16 NA NA NA NA NA ...
 $ ESCMAE    : Factor w/ 7 levels "0","1","2","3",..: NA NA NA NA 2 NA NA NA NA NA ...
 $ ESCMAE2010: Factor w/ 6 levels "0","1","2","3",..: NA NA NA NA 1 NA NA NA NA NA ...
 $ SERIESCMAE: Factor w/ 7 levels "1","2","4","5",..: NA NA NA NA NA NA NA NA NA NA ...
 $ OCUPMAE   : Factor w/ 13 levels "141405","141410",..: NA NA NA NA 12 NA NA NA NA NA ...
 $ QTDFILVIVO: Factor w/ 8 levels "00","01","02",..: NA NA NA NA 8 NA NA NA NA NA ...
 $ QTDFILMORT: Factor w/ 4 levels "00","01","02",..: NA NA NA NA 1 NA NA NA NA NA ...
 $ GRAVIDEZ  : Factor w/ 2 levels "1","2": NA NA NA NA 1 NA NA NA NA NA ...
 $ SEMAGESTAC: Factor w/ 13 levels "1","28","31",..: NA NA NA NA NA NA NA NA NA NA ...
 $ GESTACAO  : Factor w/ 5 levels "1","3","4","5",..: NA NA NA NA NA NA NA NA NA NA ...
 $ PARTO     : Factor w/ 2 levels "1","2": NA NA NA NA 1 NA NA NA NA NA ...
 $ OBITOPARTO: Factor w/ 2 levels "3","9": NA NA NA NA 1 NA NA NA NA NA ...
 $ PESO      : Factor w/ 30 levels "0750","1070",..: NA NA NA NA 20 NA NA NA NA NA ...
 $ NUMERODN  : Factor w/ 26 levels "59476157","61502241",..: NA NA NA NA 11 NA NA NA NA NA ...
 $ TPMORTEOCO: Factor w/ 5 levels "1","4","5","8",..: NA NA NA NA NA NA 4 NA NA NA ...
 $ OBITOGRAV : Factor w/ 3 levels "1","2","9": NA NA NA NA NA NA 2 NA NA NA ...
 $ OBITOPUERP: Factor w/ 4 levels "1","2","3","9": NA NA NA NA NA NA 3 NA NA NA ...
 $ ASSISTMED : Factor w/ 3 levels "1","2","9": 3 3 1 NA 1 NA NA NA NA NA ...
 $ EXAME     : Factor w/ 3 levels "1","2","9": NA NA NA NA NA NA NA NA NA NA ...
 $ CIRURGIA  : Factor w/ 3 levels "1","2","9": NA NA NA NA NA NA NA NA NA NA ...
 $ NECROPSIA : Factor w/ 3 levels "1","2","9": 3 NA NA NA 2 NA NA NA NA NA ...
 $ LINHAA    : Factor w/ 210 levels "*A403","*A411",..: 101 NA 51 187 52 31 164 129 125 129 ...
 $ LINHAB    : Factor w/ 246 levels "*A09X","*A150",..: 46 NA 44 6 158 99 158 41 NA 106 ...
 $ LINHAC    : Factor w/ 239 levels "*A09X","*A403",..: 141 NA 137 113 113 141 NA 136 113 141 ...
 $ LINHAD    : Factor w/ 179 levels "*A09X","*A419",..: 33 NA NA 115 97 NA 97 97 97 NA ...
 $ LINHAII   : Factor w/ 936 levels "*A09X","*A309",..: NA 625 NA 566 NA NA NA NA 99 808 ...
 $ CAUSABAS  : Factor w/ 4 levels "J450","J451",..: 4 4 1 4 4 4 4 4 4 4 ...
 $ CB_PRE    : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ CRM       : Factor w/ 4548 levels "000009966","000161987",..: 720 1100 301 4494 520 NA 2832 2462 1971 NA ...
 $ COMUNSVOIM: Factor w/ 110 levels "110033","150140",..: NA NA NA NA NA NA NA NA NA NA ...
 $ DTATESTADO: Factor w/ 1092 levels "01012014","01012015",..: 184 841 97 1031 217 NA 551 682 719 222 ...
 $ CIRCOBITO : Factor w/ 1 level "9": NA NA NA NA NA NA NA NA NA NA ...
 $ ACIDTRAB  : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ FONTE     : Factor w/ 1 level "9": NA NA NA NA NA NA NA NA NA NA ...
 $ NUMEROLOTE: Factor w/ 484 levels "20140001","20140002",..: 3 14 9 22 120 267 278 2 29 32 ...
 $ TPPOS     : Factor w/ 2 levels "N","S": 1 1 2 1 1 2 2 1 NA NA ...
 $ DTINVESTIG: Factor w/ 631 levels "01032014","01032016",..: NA NA 63 NA NA 388 504 NA NA NA ...
 $ CAUSABAS_O: Factor w/ 73 levels "A162","A419",..: 39 39 36 39 39 70 39 39 39 39 ...
 $ DTCADASTRO: Factor w/ 844 levels "01012007","01022016",..: 362 373 408 23 305 17 728 108 730 430 ...
 $ ATESTANTE : Factor w/ 5 levels "1","2","3","4",..: 5 5 NA 2 5 NA 1 2 5 2 ...
 $ STCODIFICA: Factor w/ 2 levels "N","S": 2 2 2 2 2 2 2 2 2 2 ...
 $ CODIFICADO: Factor w/ 1 level "S": 1 1 1 1 1 1 1 1 1 1 ...
 $ VERSAOSIST: Factor w/ 5 levels "2...0","2.2.00",..: 3 3 3 3 3 3 3 3 3 3 ...
 $ VERSAOSCB : Factor w/ 3 levels "2.2","3.2","4.880": 2 2 2 2 2 2 2 2 2 2 ...
 $ FONTEINV  : Factor w/ 9 levels "1","2","3","4",..: NA NA 2 NA NA 2 2 NA NA NA ...
 $ DTRECEBIM : Factor w/ 910 levels "01022016","01022017",..: 489 501 21 863 868 775 676 120 879 612 ...
 $ ATESTADO  : Factor w/ 3557 levels "*J189 J459","*J189 J459 I10 E41",..: 1308 10 906 3264 943 763 2941 2221 1651 2319 ...
 $ DTRECORIGA: Factor w/ 808 levels "01022016","01022017",..: 425 436 17 764 768 15 7 102 779 538 ...
 $ CAUSAMAT  : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ ESCMAEAGR1: Factor w/ 10 levels "00","02","03",..: NA NA NA NA 1 NA NA NA NA NA ...
 $ ESCFALAGR1: Factor w/ 13 levels "00","01","02",..: 3 9 NA 10 NA 3 1 1 11 NA ...
 $ STDOEPIDEM: Factor w/ 1 level "0": 1 1 1 1 1 1 1 1 1 1 ...
 $ STDONOVA  : Factor w/ 2 levels "0","1": 1 1 1 1 2 2 2 1 1 1 ...
 $ DIFDATA   : Factor w/ 1010 levels "000","0001","0002",..: 13 26 31 68 256 587 830 18 165 144 ...
 $ NUDIASOBCO: Factor w/ 204 levels "0000","0001",..: NA NA NA NA NA NA 40 NA NA NA ...
 $ NUDIASOBIN: Factor w/ 182 levels "0006","0009",..: NA NA NA NA NA NA 29 NA NA NA ...
 $ DTCADINV  : Factor w/ 379 levels "01022017","01042014",..: NA NA NA NA NA NA 321 NA NA NA ...
 $ TPOBITOCOR: Factor w/ 7 levels "1","3","5","6",..: NA NA NA NA NA NA 7 NA NA NA ...
 $ DTCONINV  : Factor w/ 399 levels "01022015","01022017",..: NA NA NA NA NA NA 309 NA NA NA ...
 $ FONTES    : Factor w/ 26 levels "SSSSXS","SSSSXX",..: NA NA NA NA NA NA 14 NA NA NA ...
 $ TPRESGINFO: Factor w/ 3 levels "1","2","3": NA NA NA NA NA NA NA NA NA NA ...
 $ TPNIVELINV: Factor w/ 3 levels "E","M","R": NA NA NA NA NA NA 2 NA NA NA ...
 $ NUDIASINF : Factor w/ 28 levels "0052","0053",..: NA NA NA NA NA NA NA NA NA NA ...
 $ DTCADINF  : Factor w/ 70 levels "01042015","01082014",..: NA NA NA NA 22 NA NA NA NA NA ...
 $ MORTEPARTO: Factor w/ 2 levels "3","9": NA NA NA NA 1 NA NA NA NA NA ...
 $ DTCONCASO : Factor w/ 0 levels: NA NA NA NA NA NA NA NA NA NA ...
 $ FONTESINF : Factor w/ 13 levels "SSSSXXX","SSXSXXX",..: 13 13 13 13 NA NA NA 13 13 13 ...
 $ ALTCAUSA  : Factor w/ 2 levels "1","2": NA NA NA NA 2 NA NA NA NA NA ...
 - attr(*, "data_types")= chr  "C" "C" "C" "C" ...

# Variáveis extraídas do Banco SIMSUS 

NUMERODO: Número da DO, seqüencial por UF informante e por ano.

DTOBIT: Data do óbito, no formato ddmmaaaa .

CODMUNRES: Município de residência do falecido

#

do<-as.factor(as.character(sim$NUMERODO))

dtobito<-dmy(sim$DTOBITO)

anoobito<-year(dtobito)

munobito<-as.factor(as.character(sim$CODMUNRES))


## Formando novo banco de dados ##

sim2<-data.frame(anoobito,do,munobito)


#########################################################################


# como identificar numero de internações por municipio e ano #

obito2016<- sim2%>%filter(anoobito==2016)%>%group_by(munobito)%>%summarise(n_obito=length(do))
obito2016<-data.frame(obito2016) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2016" que possui esta variável" #

obito2017<- sim2%>%filter(anoobito==2017)%>%group_by(munobito)%>%summarise(n_obito=length(do))
obito2017<-data.frame(obito2017) # nao foi adicionado a variável ano, pois posteriomente este banco sera adicionado ao banco "lme2017" que possui esta variável" #

#########################################################################

# padronizando o nome da variável do municipio dos diferentes bancos para uni-los posteriormente #

names(lme2016) [1]<-c("mun")

names(pcn2016) [1]<-c("mun")

names(int2016) [1]<-c("mun")

names(uti2016) [1]<-c("mun")

names(obito2016) [1]<-c("mun")

names(lme2017) [1]<-c("mun")

names(pcn2017) [1]<-c("mun")

names(int2017) [1]<-c("mun")

names(uti2017) [1]<-c("mun")

names(obito2017) [1]<-c("mun")


#########################################################################

# Criando o banco final para visualização no Tableau Public #

# unindo os bancos de dados de acordo com o ano #

b2016<-merge(lme2016,pcn2016,by="mun",all=T)

b2016<-merge(b2016,int2016,by="mun",all=T)

b2016<-merge(b2016,uti2016,by="mun",all=T)

b2016<-merge(b2016,obito2016,by="mun",all=T)

b2017<-merge(lme2017,pcn2017,by="mun",all=T)

b2017<-merge(b2017,int2017,by="mun",all=T)

b2017<-merge(b2017,uti2017,by="mun",all=T)

b2017<-merge(b2017,obito2017,by="mun",all=T)

# unindo os bancos dos diferentes anos #

final <-full_join(b2016,b2017)

# substituir os NAs por 0, pois neste caso o NA é acrecentado quando uma cidade consta em um banco de dados, mas nao no outro, o que significa que o valor da variável para esta cidade é 0 # #

final[is.na(final$lme)]<-0
final[is.na(final$n_pcn)]<-0
final[is.na(final$n_int)]<-0
final[is.na(final$n_uti)]<-0
final[is.na(final$n_obito)]<-0

# características do banco de dados #

##

'data.frame':   10388 obs. of  7 variables:
 $ mun    : Factor w/ 5404 levels "110001","110002",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ n_lme: num  332 967 62 351 150 39 18 9 131 15 ...
 $ ano    : num  2016 2016 2016 2016 2016 ...
 $ n_pcn: num  56 159 9 58 18 6 2 2 22 4 ...
 $ n_int: num  55 52 1 21 60 15 8 7 3 53 ...
 $ n_uti  : num  0 1 0 0 0 0 0 0 0 0 ...
 $ n_obito: num  0 0 0 0 0 0 0 0 0 0 ...

# Exportando para .csv #

write.csv(final, "Banco asma tableau.csv")

#########################################################################